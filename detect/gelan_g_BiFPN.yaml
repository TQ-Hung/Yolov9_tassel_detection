
# YOLOv9

# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple
#activation: nn.LeakyReLU(0.1)
#activation: nn.ReLU()

# anchors
anchors: 3

# gelan backbone
backbone:
  [
   # conv down
   [-1, 1, Conv, [32, 3, 2]],  # 0-P1/2

   [-1, 1, Conv, [64, 3, 1, 1, 8, 2]],
   
   # conv down
   [-1, 1, Conv, [128, 3, 2, 1, 16]],  # 2-P2/4

   # elan-1 block
   [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 3

   [-1, 1, Conv, [256, 3, 1, 1, 16]], 

   # avg-conv down
   [-1, 1, Conv, [256, 3, 2, 1,32]],  # 5-P3/8

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 256, 128, 1]],  # 6

   [-1, 1, Conv, [512, 3, 1, 1, 32]], 
   
   # avg-conv down
   [-1, 1, Conv, [512, 3, 2, 1, 64]],  # 8-P4/16

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 9

   [-1, 1, Conv, [512, 3, 1, 1, 64]], 
   
   # avg-conv down
   [-1, 1, Conv, [512, 3, 2]],  # 11-P5/32

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 12
  ]

# gelan head
head:
  [
   # elan-spp block
   [-1, 1, SPPELAN, [512, 256]],  # 13

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 9], 1, Concat, [1]],  # cat backbone P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 16

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 6], 1, Concat, [1]],  # cat backbone P3

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 19 (P3/8-small)

   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 3], 1, Concat, [1]],  # cat backbone P2

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 25, 128, 1]],  # 23 (P3/8-small)
   
   # detect
   [[16, 19, 23], 1, DDetect, [nc]],  # Detect(P3, P4, P5)
  ]
